<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>bitstream.io</title><link href="/" rel="alternate"></link><link href="/feeds/ops.atom.xml" rel="self"></link><id>/</id><updated>2014-08-13T00:00:00-07:00</updated><entry><title>Creating a Trivial, Signed APT Repository</title><link href="/creating-a-trivial-signed-apt-repository.html" rel="alternate"></link><updated>2014-08-13T00:00:00-07:00</updated><author><name>raj</name></author><id>tag:,2014-08-13:creating-a-trivial-signed-apt-repository.html</id><summary type="html">&lt;p&gt;Setting up an APT repository is a reasonable way to distribute &lt;code&gt;.deb&lt;/code&gt;
packages to end users. You will want to create a signed repository, so
that users can perform automated updates of your software (e.g. using
&lt;code&gt;apt-get install -y&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;There are two kinds of repositories, "official" and "trivial". Trivial
repositories are easier to set up than the official variety, but setup
of signed trivial repositories is not well-documented. Here are
instructions on how to set up your own repo:&lt;/p&gt;
&lt;p&gt;Prerequisites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;code&gt;.deb&lt;/code&gt; file, unsigned&lt;/li&gt;
&lt;li&gt;A machine with &lt;code&gt;gpg&lt;/code&gt; installed&lt;/li&gt;
&lt;li&gt;RSA gpg keys created using &lt;code&gt;gpg --gen-key&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The repository is a simply a directory hierarchy. It can be local (e.g. on a usb stick) or
published to a web server. Here is what it should look like when we are done:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;aptrepo&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;binary&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Packages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deb&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Release&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Release&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gpg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Start by creating the hierarchy above with empty directories. Place &lt;code&gt;foo.deb&lt;/code&gt; in the
&lt;code&gt;binary&lt;/code&gt; directory, and then follow these instructions to create the signed files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#sign the .deb file&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/aptrepo/binary
dpkg-sig --sign builder foo.deb

&lt;span class="c"&gt;#create the Packages.gz file&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/aptrepo
apt-ftparchive packages binary | gzip -9c &amp;gt; binary/Packages.gz

&lt;span class="c"&gt;#create the Release file&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/aptrepo
apt-ftparchive release . &amp;gt; Release

&lt;span class="c"&gt;#create a detached ascii signature of the Release file&lt;/span&gt;
gpg --armor --sign --detach-sign Release.gpg Release
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you can upload the &lt;code&gt;aptrepo&lt;/code&gt; directory to a webserver. If the repo
path is &lt;code&gt;http://example.com/foo/aptrepo&lt;/code&gt;, then end users will have to
add this line to their  &lt;code&gt;/etc/apt/sources.list&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;deb http://example.com/foo/aptrepo binary/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that the &lt;code&gt;add-apt-repository&lt;/code&gt; tool makes it easy for end users to
add repos to &lt;code&gt;sources.list&lt;/code&gt;, but older versions of this tool contain a
bug (&lt;a href="https://bugs.launchpad.net/ubuntu/+source/software-properties/+bug/987264"&gt;now fixed&lt;/a&gt;)
that adds a &lt;code&gt;deb-src&lt;/code&gt; line in addition to the &lt;code&gt;deb&lt;/code&gt; line, which will
cause &lt;code&gt;apt-get update&lt;/code&gt; to fail.&lt;/p&gt;
&lt;p&gt;You now need to distribute your public key to end users, who will need to add it to their
apt keychain. To export the public key to a text file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;gpg --armor --export foo@example.com --output foo-public-key
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then upload &lt;code&gt;foo-public-key&lt;/code&gt; to a webserver. End users can install the key like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;curl http://example.com/foo-public-key | sudo apt-key add -
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once the key has been added, end users can install your software using &lt;code&gt;apt&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get update
sudo apt-get install foo
&lt;/pre&gt;&lt;/div&gt;</summary><category term="apt"></category><category term="debian"></category><category term="ubuntu"></category></entry></feed>